openapi: 3.0.0
info:
  title: Example API
  description: API for managing various resources with different authentication methods.
  version: 1.0.0

servers:
  - url: http://{host}:{port}/api
    description: API server
    variables:
      host:
        default: localhost
      port:
        default: '8080'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic Authentication with username and password.
      
    apiKeyAuth:
      type: apiKey
      name: X-Api-Key  # Change based on how the API key should be sent (header, query, etc.)
      in: header
      description: API Key authentication.

    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://{host}:{port}/oauth/authorize
          tokenUrl: http://{host}:{port}/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
        clientCredentials:
          tokenUrl: http://{host}:{port}/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access

security:
  - basicAuth: []
  - apiKeyAuth: []
  - oauth2:
      - read
      - write

paths:
  /resource:
    get:
      summary: Get a resource
      security:
        - apiKeyAuth: []  # Override global security
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized

    post:
      summary: Create a resource
      security:
        - oauth2: [write]  # Requires write scope
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Resource created successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /login:
    post:
      summary: User login
      security: []  # No security for login endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
